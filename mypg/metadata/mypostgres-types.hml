---
kind: ScalarType
version: v1
definition:
  name: int4
  graphql:
    typeName: mypg_int4

---
kind: BooleanExpressionType
version: v1
definition:
  name: int4_bool_exp
  operand:
    scalar:
      type: int4
      comparisonOperators:
        - name: _eq
          argumentType: int4!
        - name: _gt
          argumentType: int4!
        - name: _gte
          argumentType: int4!
        - name: _in
          argumentType: "[int4!]!"
        - name: _lt
          argumentType: int4!
        - name: _lte
          argumentType: int4!
        - name: _neq
          argumentType: int4!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: int4
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_int4_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: int4
  representation: int4
  graphql:
    comparisonExpressionTypeName: mypg_int4_comparison_exp

---
kind: ScalarType
version: v1
definition:
  name: varchar
  graphql:
    typeName: mypg_varchar

---
kind: BooleanExpressionType
version: v1
definition:
  name: varchar_bool_exp
  operand:
    scalar:
      type: varchar
      comparisonOperators:
        - name: _eq
          argumentType: varchar!
        - name: _gt
          argumentType: varchar!
        - name: _gte
          argumentType: varchar!
        - name: _ilike
          argumentType: varchar!
        - name: _in
          argumentType: "[varchar!]!"
        - name: _iregex
          argumentType: varchar!
        - name: _like
          argumentType: varchar!
        - name: _lt
          argumentType: varchar!
        - name: _lte
          argumentType: varchar!
        - name: _neq
          argumentType: varchar!
        - name: _nilike
          argumentType: varchar!
        - name: _niregex
          argumentType: varchar!
        - name: _nlike
          argumentType: varchar!
        - name: _nregex
          argumentType: varchar!
        - name: _regex
          argumentType: varchar!
        - name: starts_with
          argumentType: varchar!
        - name: ts_match_tt
          argumentType: varchar!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: varchar
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_varchar_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: varchar
  representation: varchar
  graphql:
    comparisonExpressionTypeName: mypg_varchar_comparison_exp

---
kind: ScalarType
version: v1
definition:
  name: numeric
  graphql:
    typeName: mypg_numeric

---
kind: BooleanExpressionType
version: v1
definition:
  name: numeric_bool_exp
  operand:
    scalar:
      type: numeric
      comparisonOperators:
        - name: _eq
          argumentType: numeric!
        - name: _gt
          argumentType: numeric!
        - name: _gte
          argumentType: numeric!
        - name: _in
          argumentType: "[numeric!]!"
        - name: _lt
          argumentType: numeric!
        - name: _lte
          argumentType: numeric!
        - name: _neq
          argumentType: numeric!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: numeric
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_numeric_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: numeric
  representation: numeric
  graphql:
    comparisonExpressionTypeName: mypg_numeric_comparison_exp

---
kind: ScalarType
version: v1
definition:
  name: int8
  graphql:
    typeName: mypg_int8

---
kind: BooleanExpressionType
version: v1
definition:
  name: int8_bool_exp
  operand:
    scalar:
      type: int8
      comparisonOperators:
        - name: _eq
          argumentType: int8!
        - name: _gt
          argumentType: int8!
        - name: _gte
          argumentType: int8!
        - name: _in
          argumentType: "[int8!]!"
        - name: _lt
          argumentType: int8!
        - name: _lte
          argumentType: int8!
        - name: _neq
          argumentType: int8!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: int8
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_int8_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: int8
  representation: int8
  graphql:
    comparisonExpressionTypeName: mypg_int8_comparison_exp

---
kind: AggregateExpression
version: v1
definition:
  name: int4_agg_exp
  operand:
    scalar:
      aggregatedType: int4
      aggregationFunctions:
        - name: avg
          returnType: numeric
        - name: bit_and
          returnType: int4
        - name: bit_or
          returnType: int4
        - name: bit_xor
          returnType: int4
        - name: max
          returnType: int4
        - name: min
          returnType: int4
        - name: stddev
          returnType: numeric
        - name: stddev_pop
          returnType: numeric
        - name: stddev_samp
          returnType: numeric
        - name: sum
          returnType: int8
        - name: var_pop
          returnType: numeric
        - name: var_samp
          returnType: numeric
        - name: variance
          returnType: numeric
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: int4
          functionMapping:
            avg:
              name: avg
            bit_and:
              name: bit_and
            bit_or:
              name: bit_or
            bit_xor:
              name: bit_xor
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_int4_agg_exp

---
kind: ScalarType
version: v1
definition:
  name: text
  graphql:
    typeName: mypg_text

---
kind: BooleanExpressionType
version: v1
definition:
  name: text_bool_exp
  operand:
    scalar:
      type: text
      comparisonOperators:
        - name: _eq
          argumentType: text!
        - name: _gt
          argumentType: text!
        - name: _gte
          argumentType: text!
        - name: _ilike
          argumentType: text!
        - name: _in
          argumentType: "[text!]!"
        - name: _iregex
          argumentType: text!
        - name: _like
          argumentType: text!
        - name: _lt
          argumentType: text!
        - name: _lte
          argumentType: text!
        - name: _neq
          argumentType: text!
        - name: _nilike
          argumentType: text!
        - name: _niregex
          argumentType: text!
        - name: _nlike
          argumentType: text!
        - name: _nregex
          argumentType: text!
        - name: _regex
          argumentType: text!
        - name: starts_with
          argumentType: text!
        - name: ts_match_tt
          argumentType: text!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: text
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_text_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: text
  representation: text
  graphql:
    comparisonExpressionTypeName: mypg_text_comparison_exp

---
kind: AggregateExpression
version: v1
definition:
  name: varchar_agg_exp
  operand:
    scalar:
      aggregatedType: varchar
      aggregationFunctions:
        - name: max
          returnType: text
        - name: min
          returnType: text
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: varchar
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_varchar_agg_exp

---
kind: OrderByExpression
version: v1
definition:
  name: int4_order_by_exp
  operand:
    scalar:
      orderedType: int4
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_int4_order_by_exp

---
kind: OrderByExpression
version: v1
definition:
  name: varchar_order_by_exp
  operand:
    scalar:
      orderedType: varchar
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_varchar_order_by_exp

---
kind: ScalarType
version: v1
definition:
  name: timestamp
  graphql:
    typeName: mypg_timestamp

---
kind: BooleanExpressionType
version: v1
definition:
  name: timestamp_bool_exp
  operand:
    scalar:
      type: timestamp
      comparisonOperators:
        - name: _eq
          argumentType: timestamp!
        - name: _gt
          argumentType: timestamp!
        - name: _gte
          argumentType: timestamp!
        - name: _in
          argumentType: "[timestamp!]!"
        - name: _lt
          argumentType: timestamp!
        - name: _lte
          argumentType: timestamp!
        - name: _neq
          argumentType: timestamp!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: timestamp
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_timestamp_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: timestamp
  representation: timestamp
  graphql:
    comparisonExpressionTypeName: mypg_timestamp_comparison_exp

---
kind: AggregateExpression
version: v1
definition:
  name: timestamp_agg_exp
  operand:
    scalar:
      aggregatedType: timestamp
      aggregationFunctions:
        - name: max
          returnType: timestamp
        - name: min
          returnType: timestamp
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: timestamp
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_timestamp_agg_exp

---
kind: OrderByExpression
version: v1
definition:
  name: timestamp_order_by_exp
  operand:
    scalar:
      orderedType: timestamp
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_timestamp_order_by_exp

---
kind: AggregateExpression
version: v1
definition:
  name: numeric_agg_exp
  operand:
    scalar:
      aggregatedType: numeric
      aggregationFunctions:
        - name: avg
          returnType: numeric
        - name: max
          returnType: numeric
        - name: min
          returnType: numeric
        - name: stddev
          returnType: numeric
        - name: stddev_pop
          returnType: numeric
        - name: stddev_samp
          returnType: numeric
        - name: sum
          returnType: numeric
        - name: var_pop
          returnType: numeric
        - name: var_samp
          returnType: numeric
        - name: variance
          returnType: numeric
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: numeric
          functionMapping:
            avg:
              name: avg
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_numeric_agg_exp

---
kind: OrderByExpression
version: v1
definition:
  name: numeric_order_by_exp
  operand:
    scalar:
      orderedType: numeric
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_numeric_order_by_exp

---
kind: ScalarType
version: v1
definition:
  name: json
  graphql:
    typeName: mypg_json

---
kind: BooleanExpressionType
version: v1
definition:
  name: json_bool_exp
  operand:
    scalar:
      type: json
      comparisonOperators:
        - name: _in
          argumentType: "[json!]!"
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: json
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_json_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: json
  representation: json
  graphql:
    comparisonExpressionTypeName: mypg_json_comparison_exp

---
kind: AggregateExpression
version: v1
definition:
  name: text_agg_exp
  operand:
    scalar:
      aggregatedType: text
      aggregationFunctions:
        - name: max
          returnType: text
        - name: min
          returnType: text
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: text
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_text_agg_exp

---
kind: AggregateExpression
version: v1
definition:
  name: json_agg_exp
  operand:
    scalar:
      aggregatedType: json
      aggregationFunctions: []
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: json
          functionMapping: {}
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_json_agg_exp

---
kind: OrderByExpression
version: v1
definition:
  name: text_order_by_exp
  operand:
    scalar:
      orderedType: text
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_text_order_by_exp

---
kind: OrderByExpression
version: v1
definition:
  name: json_order_by_exp
  operand:
    scalar:
      orderedType: json
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_json_order_by_exp

---
kind: ScalarType
version: v1
definition:
  name: bool
  graphql:
    typeName: mypg_bool

---
kind: BooleanExpressionType
version: v1
definition:
  name: bool_bool_exp
  operand:
    scalar:
      type: bool
      comparisonOperators:
        - name: _eq
          argumentType: bool!
        - name: _gt
          argumentType: bool!
        - name: _gte
          argumentType: bool!
        - name: _in
          argumentType: "[bool!]!"
        - name: _lt
          argumentType: bool!
        - name: _lte
          argumentType: bool!
        - name: _neq
          argumentType: bool!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: bool
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_bool_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: bool
  representation: bool
  graphql:
    comparisonExpressionTypeName: mypg_bool_comparison_exp

---
kind: ScalarType
version: v1
definition:
  name: timestamptz
  graphql:
    typeName: mypg_timestamptz

---
kind: BooleanExpressionType
version: v1
definition:
  name: timestamptz_bool_exp
  operand:
    scalar:
      type: timestamptz
      comparisonOperators:
        - name: _eq
          argumentType: timestamptz!
        - name: _gt
          argumentType: timestamptz!
        - name: _gte
          argumentType: timestamptz!
        - name: _in
          argumentType: "[timestamptz!]!"
        - name: _lt
          argumentType: timestamptz!
        - name: _lte
          argumentType: timestamptz!
        - name: _neq
          argumentType: timestamptz!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: timestamptz
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_timestamptz_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: timestamptz
  representation: timestamptz
  graphql:
    comparisonExpressionTypeName: mypg_timestamptz_comparison_exp

---
kind: ScalarType
version: v1
definition:
  name: jsonb
  graphql:
    typeName: mypg_jsonb

---
kind: BooleanExpressionType
version: v1
definition:
  name: jsonb_bool_exp
  operand:
    scalar:
      type: jsonb
      comparisonOperators:
        - name: _eq
          argumentType: jsonb!
        - name: _gt
          argumentType: jsonb!
        - name: _gte
          argumentType: jsonb!
        - name: _in
          argumentType: "[jsonb!]!"
        - name: _lt
          argumentType: jsonb!
        - name: _lte
          argumentType: jsonb!
        - name: _neq
          argumentType: jsonb!
        - name: jsonb_contained
          argumentType: jsonb!
        - name: jsonb_contains
          argumentType: jsonb!
        - name: jsonb_exists
          argumentType: text!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: jsonb
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_jsonb_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: jsonb
  representation: jsonb
  graphql:
    comparisonExpressionTypeName: mypg_jsonb_comparison_exp

---
kind: AggregateExpression
version: v1
definition:
  name: bool_agg_exp
  operand:
    scalar:
      aggregatedType: bool
      aggregationFunctions:
        - name: bool_and
          returnType: bool
        - name: bool_or
          returnType: bool
        - name: every
          returnType: bool
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: bool
          functionMapping:
            bool_and:
              name: bool_and
            bool_or:
              name: bool_or
            every:
              name: every
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_bool_agg_exp

---
kind: AggregateExpression
version: v1
definition:
  name: timestamptz_agg_exp
  operand:
    scalar:
      aggregatedType: timestamptz
      aggregationFunctions:
        - name: max
          returnType: timestamptz
        - name: min
          returnType: timestamptz
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: timestamptz
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_timestamptz_agg_exp

---
kind: AggregateExpression
version: v1
definition:
  name: jsonb_agg_exp
  operand:
    scalar:
      aggregatedType: jsonb
      aggregationFunctions: []
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: jsonb
          functionMapping: {}
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_jsonb_agg_exp

---
kind: OrderByExpression
version: v1
definition:
  name: bool_order_by_exp
  operand:
    scalar:
      orderedType: bool
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_bool_order_by_exp

---
kind: OrderByExpression
version: v1
definition:
  name: timestamptz_order_by_exp
  operand:
    scalar:
      orderedType: timestamptz
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_timestamptz_order_by_exp

---
kind: OrderByExpression
version: v1
definition:
  name: jsonb_order_by_exp
  operand:
    scalar:
      orderedType: jsonb
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_jsonb_order_by_exp

---
kind: ScalarType
version: v1
definition:
  name: uuid
  graphql:
    typeName: mypg_uuid

---
kind: BooleanExpressionType
version: v1
definition:
  name: uuid_bool_exp
  operand:
    scalar:
      type: uuid
      comparisonOperators:
        - name: _eq
          argumentType: uuid!
        - name: _gt
          argumentType: uuid!
        - name: _gte
          argumentType: uuid!
        - name: _in
          argumentType: "[uuid!]!"
        - name: _lt
          argumentType: uuid!
        - name: _lte
          argumentType: uuid!
        - name: _neq
          argumentType: uuid!
      dataConnectorOperatorMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: uuid
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mypg_uuid_bool_exp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mypostgres
  dataConnectorScalarType: uuid
  representation: uuid
  graphql:
    comparisonExpressionTypeName: mypg_uuid_comparison_exp

---
kind: AggregateExpression
version: v1
definition:
  name: uuid_agg_exp
  operand:
    scalar:
      aggregatedType: uuid
      aggregationFunctions: []
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mypostgres
          dataConnectorScalarType: uuid
          functionMapping: {}
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: mypg_uuid_agg_exp

---
kind: OrderByExpression
version: v1
definition:
  name: uuid_order_by_exp
  operand:
    scalar:
      orderedType: uuid
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: mypg_uuid_order_by_exp

