# yaml-language-server: $schema=https://raw.githubusercontent.com/hasura/ndc-prometheus/main/jsonschema/configuration.json
connection_settings:
  url:
    env: CONNECTION_URL
generator:
  metrics:
    enabled: true
    behavior: merge
    include: []
    exclude:
      - ^prometheus_tsdb.+
    exclude_labels: []
    start_at: 2024-01-01T00:00:00Z
metadata:
  metrics:
    go_gc_cycles_automatic_gc_cycles_total:
      type: counter
      description: Count of completed GC cycles generated by the Go runtime. Sourced from /gc/cycles/automatic:gc-cycles
      labels:
        instance: {}
        job: {}
    go_gc_cycles_forced_gc_cycles_total:
      type: counter
      description: Count of completed GC cycles forced by the application. Sourced from /gc/cycles/forced:gc-cycles
      labels:
        instance: {}
        job: {}
    go_gc_cycles_total_gc_cycles_total:
      type: counter
      description: Count of all completed GC cycles. Sourced from /gc/cycles/total:gc-cycles
      labels:
        instance: {}
        job: {}
    go_gc_gogc_percent:
      type: gauge
      description: Heap size target percentage configured by the user, otherwise 100. This value is set by the GOGC environment variable, and the runtime/debug.SetGCPercent function. Sourced from /gc/gogc:percent
      labels:
        instance: {}
        job: {}
    go_gc_gomemlimit_bytes:
      type: gauge
      description: Go runtime memory limit configured by the user, otherwise math.MaxInt64. This value is set by the GOMEMLIMIT environment variable, and the runtime/debug.SetMemoryLimit function. Sourced from /gc/gomemlimit:bytes
      labels:
        instance: {}
        job: {}
    go_gc_heap_allocs_by_size_bytes:
      type: histogram
      description: Distribution of heap allocations by approximate size. Bucket counts increase monotonically. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks. Sourced from /gc/heap/allocs-by-size:bytes
      labels:
        instance: {}
        job: {}
    go_gc_heap_allocs_bytes_total:
      type: counter
      description: Cumulative sum of memory allocated to the heap by the application. Sourced from /gc/heap/allocs:bytes
      labels:
        instance: {}
        job: {}
    go_gc_heap_allocs_objects_total:
      type: counter
      description: Cumulative count of heap allocations triggered by the application. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks. Sourced from /gc/heap/allocs:objects
      labels:
        instance: {}
        job: {}
    go_gc_heap_frees_by_size_bytes:
      type: histogram
      description: Distribution of freed heap allocations by approximate size. Bucket counts increase monotonically. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks. Sourced from /gc/heap/frees-by-size:bytes
      labels:
        instance: {}
        job: {}
    go_gc_heap_frees_bytes_total:
      type: counter
      description: Cumulative sum of heap memory freed by the garbage collector. Sourced from /gc/heap/frees:bytes
      labels:
        instance: {}
        job: {}
    go_gc_heap_frees_objects_total:
      type: counter
      description: Cumulative count of heap allocations whose storage was freed by the garbage collector. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks. Sourced from /gc/heap/frees:objects
      labels:
        instance: {}
        job: {}
    go_gc_heap_goal_bytes:
      type: gauge
      description: Heap size target for the end of the GC cycle. Sourced from /gc/heap/goal:bytes
      labels:
        instance: {}
        job: {}
    go_gc_heap_live_bytes:
      type: gauge
      description: Heap memory occupied by live objects that were marked by the previous GC. Sourced from /gc/heap/live:bytes
      labels:
        instance: {}
        job: {}
    go_gc_heap_objects_objects:
      type: gauge
      description: Number of objects, live or unswept, occupying heap memory. Sourced from /gc/heap/objects:objects
      labels:
        instance: {}
        job: {}
    go_gc_heap_tiny_allocs_objects_total:
      type: counter
      description: Count of small allocations that are packed together into blocks. These allocations are counted separately from other allocations because each individual allocation is not tracked by the runtime, only their block. Each block is already accounted for in allocs-by-size and frees-by-size. Sourced from /gc/heap/tiny/allocs:objects
      labels:
        instance: {}
        job: {}
    go_gc_limiter_last_enabled_gc_cycle:
      type: gauge
      description: GC cycle the last time the GC CPU limiter was enabled. This metric is useful for diagnosing the root cause of an out-of-memory error, because the limiter trades memory for CPU time when the GC's CPU time gets too high. This is most likely to occur with use of SetMemoryLimit. The first GC cycle is cycle 1, so a value of 0 indicates that it was never enabled. Sourced from /gc/limiter/last-enabled:gc-cycle
      labels:
        instance: {}
        job: {}
    go_gc_pauses_seconds:
      type: histogram
      description: Deprecated. Prefer the identical /sched/pauses/total/gc:seconds. Sourced from /gc/pauses:seconds
      labels:
        instance: {}
        job: {}
    go_gc_scan_globals_bytes:
      type: gauge
      description: The total amount of global variable space that is scannable. Sourced from /gc/scan/globals:bytes
      labels:
        instance: {}
        job: {}
    go_gc_scan_heap_bytes:
      type: gauge
      description: The total amount of heap space that is scannable. Sourced from /gc/scan/heap:bytes
      labels:
        instance: {}
        job: {}
    go_gc_scan_stack_bytes:
      type: gauge
      description: The number of bytes of stack that were scanned last GC cycle. Sourced from /gc/scan/stack:bytes
      labels:
        instance: {}
        job: {}
    go_gc_scan_total_bytes:
      type: gauge
      description: The total amount space that is scannable. Sum of all metrics in /gc/scan. Sourced from /gc/scan/total:bytes
      labels:
        instance: {}
        job: {}
    go_gc_stack_starting_size_bytes:
      type: gauge
      description: The stack size of new goroutines. Sourced from /gc/stack/starting-size:bytes
      labels:
        instance: {}
        job: {}
    go_goroutines:
      type: gauge
      description: Number of goroutines that currently exist.
      labels:
        instance: {}
        job: {}
    go_info:
      type: gauge
      description: Information about the Go environment.
      labels:
        instance: {}
        job: {}
        version: {}
    go_memstats_alloc_bytes:
      type: gauge
      description: Number of bytes allocated in heap and currently in use. Equals to /memory/classes/heap/objects:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_alloc_bytes_total:
      type: counter
      description: Total number of bytes allocated in heap until now, even if released already. Equals to /gc/heap/allocs:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_buck_hash_sys_bytes:
      type: gauge
      description: Number of bytes used by the profiling bucket hash table. Equals to /memory/classes/profiling/buckets:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_frees_total:
      type: counter
      description: Total number of heap objects frees. Equals to /gc/heap/frees:objects + /gc/heap/tiny/allocs:objects.
      labels:
        instance: {}
        job: {}
    go_memstats_gc_sys_bytes:
      type: gauge
      description: Number of bytes used for garbage collection system metadata. Equals to /memory/classes/metadata/other:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_heap_alloc_bytes:
      type: gauge
      description: Number of heap bytes allocated and currently in use, same as go_memstats_alloc_bytes. Equals to /memory/classes/heap/objects:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_heap_idle_bytes:
      type: gauge
      description: Number of heap bytes waiting to be used. Equals to /memory/classes/heap/released:bytes + /memory/classes/heap/free:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_heap_inuse_bytes:
      type: gauge
      description: Number of heap bytes that are in use. Equals to /memory/classes/heap/objects:bytes + /memory/classes/heap/unused:bytes
      labels:
        instance: {}
        job: {}
    go_memstats_heap_objects:
      type: gauge
      description: Number of currently allocated objects. Equals to /gc/heap/objects:objects.
      labels:
        instance: {}
        job: {}
    go_memstats_heap_released_bytes:
      type: gauge
      description: Number of heap bytes released to OS. Equals to /memory/classes/heap/released:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_heap_sys_bytes:
      type: gauge
      description: Number of heap bytes obtained from system. Equals to /memory/classes/heap/objects:bytes + /memory/classes/heap/unused:bytes + /memory/classes/heap/released:bytes + /memory/classes/heap/free:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_last_gc_time_seconds:
      type: gauge
      description: Number of seconds since 1970 of last garbage collection.
      labels:
        instance: {}
        job: {}
    go_memstats_lookups_total:
      type: counter
      description: Total number of pointer lookups.
      labels:
        instance: {}
        job: {}
    go_memstats_mallocs_total:
      type: counter
      description: Total number of heap objects allocated, both live and gc-ed. Semantically a counter version for go_memstats_heap_objects gauge. Equals to /gc/heap/allocs:objects + /gc/heap/tiny/allocs:objects.
      labels:
        instance: {}
        job: {}
    go_memstats_mcache_inuse_bytes:
      type: gauge
      description: Number of bytes in use by mcache structures. Equals to /memory/classes/metadata/mcache/inuse:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_mcache_sys_bytes:
      type: gauge
      description: Number of bytes used for mcache structures obtained from system. Equals to /memory/classes/metadata/mcache/inuse:bytes + /memory/classes/metadata/mcache/free:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_mspan_inuse_bytes:
      type: gauge
      description: Number of bytes in use by mspan structures.
      labels:
        instance: {}
        job: {}
    go_memstats_mspan_sys_bytes:
      type: gauge
      description: Number of bytes used for mspan structures obtained from system. Equals to /memory/classes/metadata/mspan/inuse:bytes + /memory/classes/metadata/mspan/free:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_next_gc_bytes:
      type: gauge
      description: Number of heap bytes when next garbage collection will take place. Equals to /gc/heap/goal:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_other_sys_bytes:
      type: gauge
      description: Number of bytes used for other system allocations. Equals to /memory/classes/other:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_stack_inuse_bytes:
      type: gauge
      description: Number of bytes obtained from system for stack allocator in non-CGO environments. Equals to /memory/classes/heap/stacks:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_stack_sys_bytes:
      type: gauge
      description: Number of bytes obtained from system for stack allocator. Equals to /memory/classes/heap/stacks:bytes + /memory/classes/os-stacks:bytes.
      labels:
        instance: {}
        job: {}
    go_memstats_sys_bytes:
      type: gauge
      description: Number of bytes obtained from system. Equals to /memory/classes/total:byte.
      labels:
        instance: {}
        job: {}
    go_sched_gomaxprocs_threads:
      type: gauge
      description: The current runtime.GOMAXPROCS setting, or the number of operating system threads that can execute user-level Go code simultaneously. Sourced from /sched/gomaxprocs:threads
      labels:
        instance: {}
        job: {}
    go_sched_goroutines_goroutines:
      type: gauge
      description: Count of live goroutines. Sourced from /sched/goroutines:goroutines
      labels:
        instance: {}
        job: {}
    go_sched_latencies_seconds:
      type: histogram
      description: Distribution of the time goroutines have spent in the scheduler in a runnable state before actually running. Bucket counts increase monotonically. Sourced from /sched/latencies:seconds
      labels:
        instance: {}
        job: {}
    go_sched_pauses_stopping_gc_seconds:
      type: histogram
      description: Distribution of individual GC-related stop-the-world stopping latencies. This is the time it takes from deciding to stop the world until all Ps are stopped. This is a subset of the total GC-related stop-the-world time (/sched/pauses/total/gc:seconds). During this time, some threads may be executing. Bucket counts increase monotonically. Sourced from /sched/pauses/stopping/gc:seconds
      labels:
        instance: {}
        job: {}
    go_sched_pauses_stopping_other_seconds:
      type: histogram
      description: Distribution of individual non-GC-related stop-the-world stopping latencies. This is the time it takes from deciding to stop the world until all Ps are stopped. This is a subset of the total non-GC-related stop-the-world time (/sched/pauses/total/other:seconds). During this time, some threads may be executing. Bucket counts increase monotonically. Sourced from /sched/pauses/stopping/other:seconds
      labels:
        instance: {}
        job: {}
    go_sched_pauses_total_gc_seconds:
      type: histogram
      description: Distribution of individual GC-related stop-the-world pause latencies. This is the time from deciding to stop the world until the world is started again. Some of this time is spent getting all threads to stop (this is measured directly in /sched/pauses/stopping/gc:seconds), during which some threads may still be running. Bucket counts increase monotonically. Sourced from /sched/pauses/total/gc:seconds
      labels:
        instance: {}
        job: {}
    go_sched_pauses_total_other_seconds:
      type: histogram
      description: Distribution of individual non-GC-related stop-the-world pause latencies. This is the time from deciding to stop the world until the world is started again. Some of this time is spent getting all threads to stop (measured directly in /sched/pauses/stopping/other:seconds). Bucket counts increase monotonically. Sourced from /sched/pauses/total/other:seconds
      labels:
        instance: {}
        job: {}
    go_threads:
      type: gauge
      description: Number of OS threads created.
      labels:
        instance: {}
        job: {}
    ndc_loki_query_total:
      type: counter
      description: Total number of query requests
      labels:
        collection: {}
        http_status: {}
        instance: {}
        job: {}
        otel_scope_name: {}
        status: {}
    ndc_loki_query_total_time:
      type: histogram
      description: Total time taken to plan and execute a query, in seconds
      labels:
        collection: {}
        instance: {}
        job: {}
        otel_scope_name: {}
    net_conntrack_dialer_conn_attempted_total:
      type: counter
      description: Total number of connections attempted by the given dialer a given name.
      labels:
        dialer_name: {}
        instance: {}
        job: {}
    net_conntrack_dialer_conn_closed_total:
      type: counter
      description: Total number of connections closed which originated from the dialer of a given name.
      labels:
        dialer_name: {}
        instance: {}
        job: {}
    net_conntrack_dialer_conn_established_total:
      type: counter
      description: Total number of connections successfully established by the given dialer a given name.
      labels:
        dialer_name: {}
        instance: {}
        job: {}
    net_conntrack_dialer_conn_failed_total:
      type: counter
      description: Total number of connections failed to dial by the dialer a given name.
      labels:
        dialer_name: {}
        instance: {}
        job: {}
        reason: {}
    net_conntrack_listener_conn_accepted_total:
      type: counter
      description: Total number of connections opened to the listener of a given name.
      labels:
        instance: {}
        job: {}
        listener_name: {}
    net_conntrack_listener_conn_closed_total:
      type: counter
      description: Total number of connections closed that were made to the listener of a given name.
      labels:
        instance: {}
        job: {}
        listener_name: {}
    node_arp_entries:
      type: gauge
      description: ARP entries by device
      labels:
        device: {}
        instance: {}
        job: {}
    node_boot_time_seconds:
      type: gauge
      description: Node boot time, in unixtime.
      labels:
        instance: {}
        job: {}
    node_context_switches_total:
      type: counter
      description: Total number of context switches.
      labels:
        instance: {}
        job: {}
    node_cooling_device_cur_state:
      type: gauge
      description: Current throttle state of the cooling device
      labels:
        instance: {}
        job: {}
        name: {}
        type: {}
    node_cooling_device_max_state:
      type: gauge
      description: Maximum throttle state of the cooling device
      labels:
        instance: {}
        job: {}
        name: {}
        type: {}
    node_cpu_frequency_max_hertz:
      type: gauge
      description: Maximum CPU thread frequency in hertz.
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_cpu_frequency_min_hertz:
      type: gauge
      description: Minimum CPU thread frequency in hertz.
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_cpu_guest_seconds_total:
      type: counter
      description: Seconds the CPUs spent in guests (VMs) for each mode.
      labels:
        cpu: {}
        instance: {}
        job: {}
        mode: {}
    node_cpu_scaling_frequency_hertz:
      type: gauge
      description: Current scaled CPU thread frequency in hertz.
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_cpu_scaling_frequency_max_hertz:
      type: gauge
      description: Maximum scaled CPU thread frequency in hertz.
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_cpu_scaling_frequency_min_hertz:
      type: gauge
      description: Minimum scaled CPU thread frequency in hertz.
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_cpu_scaling_governor:
      type: gauge
      description: Current enabled CPU frequency governor.
      labels:
        cpu: {}
        governor: {}
        instance: {}
        job: {}
    node_cpu_seconds_total:
      type: counter
      description: Seconds the CPUs spent in each mode.
      labels:
        cpu: {}
        instance: {}
        job: {}
        mode: {}
    node_disk_discard_time_seconds_total:
      type: counter
      description: This is the total number of seconds spent by all discards.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_discarded_sectors_total:
      type: counter
      description: The total number of sectors discarded successfully.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_discards_completed_total:
      type: counter
      description: The total number of discards completed successfully.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_discards_merged_total:
      type: counter
      description: The total number of discards merged.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_flush_requests_time_seconds_total:
      type: counter
      description: This is the total number of seconds spent by all flush requests.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_flush_requests_total:
      type: counter
      description: The total number of flush requests completed successfully
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_info:
      type: gauge
      description: Info of /sys/block/<block_device>.
      labels:
        device: {}
        instance: {}
        job: {}
        major: {}
        minor: {}
    node_disk_io_now:
      type: gauge
      description: The number of I/Os currently in progress.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_io_time_seconds_total:
      type: counter
      description: Total seconds spent doing I/Os.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_io_time_weighted_seconds_total:
      type: counter
      description: "The weighted # of seconds spent doing I/Os."
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_read_bytes_total:
      type: counter
      description: The total number of bytes read successfully.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_read_time_seconds_total:
      type: counter
      description: The total number of seconds spent by all reads.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_reads_completed_total:
      type: counter
      description: The total number of reads completed successfully.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_reads_merged_total:
      type: counter
      description: The total number of reads merged.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_write_time_seconds_total:
      type: counter
      description: This is the total number of seconds spent by all writes.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_writes_completed_total:
      type: counter
      description: The total number of writes completed successfully.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_writes_merged_total:
      type: counter
      description: The number of writes merged.
      labels:
        device: {}
        instance: {}
        job: {}
    node_disk_written_bytes_total:
      type: counter
      description: The total number of bytes written successfully.
      labels:
        device: {}
        instance: {}
        job: {}
    node_dmi_info:
      type: gauge
      description: A metric with a constant '1' value labeled by bios_date, bios_release, bios_vendor, bios_version, board_asset_tag, board_name, board_serial, board_vendor, board_version, chassis_asset_tag, chassis_serial, chassis_vendor, chassis_version, product_family, product_name, product_serial, product_sku, product_uuid, product_version, system_vendor if provided by DMI.
      labels:
        bios_date: {}
        bios_release: {}
        bios_vendor: {}
        bios_version: {}
        board_asset_tag: {}
        board_name: {}
        board_vendor: {}
        board_version: {}
        chassis_asset_tag: {}
        chassis_vendor: {}
        chassis_version: {}
        instance: {}
        job: {}
        product_family: {}
        product_name: {}
        product_sku: {}
        product_version: {}
        system_vendor: {}
    node_entropy_available_bits:
      type: gauge
      description: Bits of available entropy.
      labels:
        instance: {}
        job: {}
    node_entropy_pool_size_bits:
      type: gauge
      description: Bits of entropy pool.
      labels:
        instance: {}
        job: {}
    node_exporter_build_info:
      type: gauge
      description: A metric with a constant '1' value labeled by version, revision, branch, goversion from which node_exporter was built, and the goos and goarch for the build.
      labels:
        branch: {}
        goarch: {}
        goos: {}
        goversion: {}
        instance: {}
        job: {}
        revision: {}
        tags: {}
        version: {}
    node_filefd_allocated:
      type: gauge
      description: "File descriptor statistics: allocated."
      labels:
        instance: {}
        job: {}
    node_filefd_maximum:
      type: gauge
      description: "File descriptor statistics: maximum."
      labels:
        instance: {}
        job: {}
    node_filesystem_avail_bytes:
      type: gauge
      description: Filesystem space available to non-root users in bytes.
      labels:
        device: {}
        fstype: {}
        instance: {}
        job: {}
        mountpoint: {}
    node_filesystem_device_error:
      type: gauge
      description: Whether an error occurred while getting statistics for the given device.
      labels:
        device: {}
        device_error: {}
        fstype: {}
        instance: {}
        job: {}
        mountpoint: {}
    node_filesystem_files:
      type: gauge
      description: Filesystem total file nodes.
      labels:
        device: {}
        fstype: {}
        instance: {}
        job: {}
        mountpoint: {}
    node_filesystem_files_free:
      type: gauge
      description: Filesystem total free file nodes.
      labels:
        device: {}
        fstype: {}
        instance: {}
        job: {}
        mountpoint: {}
    node_filesystem_free_bytes:
      type: gauge
      description: Filesystem free space in bytes.
      labels:
        device: {}
        fstype: {}
        instance: {}
        job: {}
        mountpoint: {}
    node_filesystem_readonly:
      type: gauge
      description: Filesystem read-only status.
      labels:
        device: {}
        device_error: {}
        fstype: {}
        instance: {}
        job: {}
        mountpoint: {}
    node_filesystem_size_bytes:
      type: gauge
      description: Filesystem size in bytes.
      labels:
        device: {}
        fstype: {}
        instance: {}
        job: {}
        mountpoint: {}
    node_forks_total:
      type: counter
      description: Total number of forks.
      labels:
        instance: {}
        job: {}
    node_hwmon_chip_names:
      type: gauge
      description: Annotation metric for human-readable chip names
      labels:
        chip: {}
        chip_name: {}
        instance: {}
        job: {}
    node_hwmon_in_volts:
      type: gauge
      description: Hardware monitor for voltage (input)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_power_watt:
      type: gauge
      description: Hardware monitor for power usage in watts (input)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_sensor_label:
      type: gauge
      description: Label for given chip and sensor
      labels:
        chip: {}
        instance: {}
        job: {}
        label: {}
        sensor: {}
    node_hwmon_temp_alarm:
      type: gauge
      description: Hardware sensor alarm status (temp)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_celsius:
      type: gauge
      description: Hardware monitor for temperature (input)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_crit_alarm_celsius:
      type: gauge
      description: Hardware monitor for temperature (crit_alarm)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_crit_celsius:
      type: gauge
      description: Hardware monitor for temperature (crit)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_enable_celsius:
      type: gauge
      description: Hardware monitor for temperature (enable)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_lcrit_alarm_celsius:
      type: gauge
      description: Hardware monitor for temperature (lcrit_alarm)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_lcrit_celsius:
      type: gauge
      description: Hardware monitor for temperature (lcrit)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_max_alarm_celsius:
      type: gauge
      description: Hardware monitor for temperature (max_alarm)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_max_celsius:
      type: gauge
      description: Hardware monitor for temperature (max)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_min_alarm_celsius:
      type: gauge
      description: Hardware monitor for temperature (min_alarm)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_hwmon_temp_min_celsius:
      type: gauge
      description: Hardware monitor for temperature (min)
      labels:
        chip: {}
        instance: {}
        job: {}
        sensor: {}
    node_intr_total:
      type: counter
      description: Total number of interrupts serviced.
      labels:
        instance: {}
        job: {}
    node_load1:
      type: gauge
      description: 1m load average.
      labels:
        instance: {}
        job: {}
    node_load5:
      type: gauge
      description: 5m load average.
      labels:
        instance: {}
        job: {}
    node_load15:
      type: gauge
      description: 15m load average.
      labels:
        instance: {}
        job: {}
    node_memory_Active_anon_bytes:
      type: gauge
      description: Memory information field Active_anon_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Active_bytes:
      type: gauge
      description: Memory information field Active_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Active_file_bytes:
      type: gauge
      description: Memory information field Active_file_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_AnonHugePages_bytes:
      type: gauge
      description: Memory information field AnonHugePages_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_AnonPages_bytes:
      type: gauge
      description: Memory information field AnonPages_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Bounce_bytes:
      type: gauge
      description: Memory information field Bounce_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Buffers_bytes:
      type: gauge
      description: Memory information field Buffers_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Cached_bytes:
      type: gauge
      description: Memory information field Cached_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_CmaFree_bytes:
      type: gauge
      description: Memory information field CmaFree_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_CmaTotal_bytes:
      type: gauge
      description: Memory information field CmaTotal_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_CommitLimit_bytes:
      type: gauge
      description: Memory information field CommitLimit_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Committed_AS_bytes:
      type: gauge
      description: Memory information field Committed_AS_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_DirectMap1G_bytes:
      type: gauge
      description: Memory information field DirectMap1G_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_DirectMap2M_bytes:
      type: gauge
      description: Memory information field DirectMap2M_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_DirectMap4k_bytes:
      type: gauge
      description: Memory information field DirectMap4k_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Dirty_bytes:
      type: gauge
      description: Memory information field Dirty_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_FileHugePages_bytes:
      type: gauge
      description: Memory information field FileHugePages_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_FilePmdMapped_bytes:
      type: gauge
      description: Memory information field FilePmdMapped_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_HardwareCorrupted_bytes:
      type: gauge
      description: Memory information field HardwareCorrupted_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_HugePages_Free:
      type: gauge
      description: Memory information field HugePages_Free.
      labels:
        instance: {}
        job: {}
    node_memory_HugePages_Rsvd:
      type: gauge
      description: Memory information field HugePages_Rsvd.
      labels:
        instance: {}
        job: {}
    node_memory_HugePages_Surp:
      type: gauge
      description: Memory information field HugePages_Surp.
      labels:
        instance: {}
        job: {}
    node_memory_HugePages_Total:
      type: gauge
      description: Memory information field HugePages_Total.
      labels:
        instance: {}
        job: {}
    node_memory_Hugepagesize_bytes:
      type: gauge
      description: Memory information field Hugepagesize_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Hugetlb_bytes:
      type: gauge
      description: Memory information field Hugetlb_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Inactive_anon_bytes:
      type: gauge
      description: Memory information field Inactive_anon_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Inactive_bytes:
      type: gauge
      description: Memory information field Inactive_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Inactive_file_bytes:
      type: gauge
      description: Memory information field Inactive_file_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_KReclaimable_bytes:
      type: gauge
      description: Memory information field KReclaimable_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_KernelStack_bytes:
      type: gauge
      description: Memory information field KernelStack_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Mapped_bytes:
      type: gauge
      description: Memory information field Mapped_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_MemAvailable_bytes:
      type: gauge
      description: Memory information field MemAvailable_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_MemFree_bytes:
      type: gauge
      description: Memory information field MemFree_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_MemTotal_bytes:
      type: gauge
      description: Memory information field MemTotal_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Mlocked_bytes:
      type: gauge
      description: Memory information field Mlocked_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_NFS_Unstable_bytes:
      type: gauge
      description: Memory information field NFS_Unstable_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_PageTables_bytes:
      type: gauge
      description: Memory information field PageTables_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Percpu_bytes:
      type: gauge
      description: Memory information field Percpu_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_SReclaimable_bytes:
      type: gauge
      description: Memory information field SReclaimable_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_SUnreclaim_bytes:
      type: gauge
      description: Memory information field SUnreclaim_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_SecPageTables_bytes:
      type: gauge
      description: Memory information field SecPageTables_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Shmem_bytes:
      type: gauge
      description: Memory information field Shmem_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_ShmemHugePages_bytes:
      type: gauge
      description: Memory information field ShmemHugePages_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_ShmemPmdMapped_bytes:
      type: gauge
      description: Memory information field ShmemPmdMapped_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Slab_bytes:
      type: gauge
      description: Memory information field Slab_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_SwapCached_bytes:
      type: gauge
      description: Memory information field SwapCached_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_SwapFree_bytes:
      type: gauge
      description: Memory information field SwapFree_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_SwapTotal_bytes:
      type: gauge
      description: Memory information field SwapTotal_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Unaccepted_bytes:
      type: gauge
      description: Memory information field Unaccepted_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Unevictable_bytes:
      type: gauge
      description: Memory information field Unevictable_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_VmallocChunk_bytes:
      type: gauge
      description: Memory information field VmallocChunk_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_VmallocTotal_bytes:
      type: gauge
      description: Memory information field VmallocTotal_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_VmallocUsed_bytes:
      type: gauge
      description: Memory information field VmallocUsed_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Writeback_bytes:
      type: gauge
      description: Memory information field Writeback_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_WritebackTmp_bytes:
      type: gauge
      description: Memory information field WritebackTmp_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Zswap_bytes:
      type: gauge
      description: Memory information field Zswap_bytes.
      labels:
        instance: {}
        job: {}
    node_memory_Zswapped_bytes:
      type: gauge
      description: Memory information field Zswapped_bytes.
      labels:
        instance: {}
        job: {}
    node_network_address_assign_type:
      type: gauge
      description: "Network device property: address_assign_type"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_carrier:
      type: gauge
      description: "Network device property: carrier"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_carrier_changes_total:
      type: counter
      description: "Network device property: carrier_changes_total"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_carrier_down_changes_total:
      type: counter
      description: "Network device property: carrier_down_changes_total"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_carrier_up_changes_total:
      type: counter
      description: "Network device property: carrier_up_changes_total"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_device_id:
      type: gauge
      description: "Network device property: device_id"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_dormant:
      type: gauge
      description: "Network device property: dormant"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_flags:
      type: gauge
      description: "Network device property: flags"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_iface_id:
      type: gauge
      description: "Network device property: iface_id"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_iface_link:
      type: gauge
      description: "Network device property: iface_link"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_iface_link_mode:
      type: gauge
      description: "Network device property: iface_link_mode"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_info:
      type: gauge
      description: Non-numeric data from /sys/class/net/<iface>, value is always 1.
      labels:
        address: {}
        adminstate: {}
        broadcast: {}
        device: {}
        duplex: {}
        instance: {}
        job: {}
        operstate: {}
    node_network_mtu_bytes:
      type: gauge
      description: "Network device property: mtu_bytes"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_name_assign_type:
      type: gauge
      description: "Network device property: name_assign_type"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_net_dev_group:
      type: gauge
      description: "Network device property: net_dev_group"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_protocol_type:
      type: gauge
      description: "Network device property: protocol_type"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_bytes_total:
      type: counter
      description: Network device statistic receive_bytes.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_compressed_total:
      type: counter
      description: Network device statistic receive_compressed.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_drop_total:
      type: counter
      description: Network device statistic receive_drop.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_errs_total:
      type: counter
      description: Network device statistic receive_errs.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_fifo_total:
      type: counter
      description: Network device statistic receive_fifo.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_frame_total:
      type: counter
      description: Network device statistic receive_frame.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_multicast_total:
      type: counter
      description: Network device statistic receive_multicast.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_nohandler_total:
      type: counter
      description: Network device statistic receive_nohandler.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_receive_packets_total:
      type: counter
      description: Network device statistic receive_packets.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_speed_bytes:
      type: gauge
      description: "Network device property: speed_bytes"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_bytes_total:
      type: counter
      description: Network device statistic transmit_bytes.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_carrier_total:
      type: counter
      description: Network device statistic transmit_carrier.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_colls_total:
      type: counter
      description: Network device statistic transmit_colls.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_compressed_total:
      type: counter
      description: Network device statistic transmit_compressed.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_drop_total:
      type: counter
      description: Network device statistic transmit_drop.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_errs_total:
      type: counter
      description: Network device statistic transmit_errs.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_fifo_total:
      type: counter
      description: Network device statistic transmit_fifo.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_packets_total:
      type: counter
      description: Network device statistic transmit_packets.
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_transmit_queue_length:
      type: gauge
      description: "Network device property: transmit_queue_length"
      labels:
        device: {}
        instance: {}
        job: {}
    node_network_up:
      type: gauge
      description: Value is 1 if operstate is 'up', 0 otherwise.
      labels:
        device: {}
        instance: {}
        job: {}
    node_nf_conntrack_entries:
      type: gauge
      description: Number of currently allocated flow entries for connection tracking.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_entries_limit:
      type: gauge
      description: Maximum size of connection tracking table.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_stat_drop:
      type: gauge
      description: Number of packets dropped due to conntrack failure.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_stat_early_drop:
      type: gauge
      description: Number of dropped conntrack entries to make room for new ones, if maximum table size was reached.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_stat_found:
      type: gauge
      description: Number of searched entries which were successful.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_stat_ignore:
      type: gauge
      description: Number of packets seen which are already connected to a conntrack entry.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_stat_insert:
      type: gauge
      description: Number of entries inserted into the list.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_stat_insert_failed:
      type: gauge
      description: Number of entries for which list insertion was attempted but failed.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_stat_invalid:
      type: gauge
      description: Number of packets seen which can not be tracked.
      labels:
        instance: {}
        job: {}
    node_nf_conntrack_stat_search_restart:
      type: gauge
      description: Number of conntrack table lookups which had to be restarted due to hashtable resizes.
      labels:
        instance: {}
        job: {}
    node_nvme_info:
      type: gauge
      description: Non-numeric data from /sys/class/nvme/<device>, value is always 1.
      labels:
        device: {}
        firmware_revision: {}
        instance: {}
        job: {}
        model: {}
        serial: {}
        state: {}
    node_power_supply_capacity:
      type: gauge
      description: capacity value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_cyclecount:
      type: gauge
      description: cyclecount value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_energy_full:
      type: gauge
      description: energy_full value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_energy_full_design:
      type: gauge
      description: energy_full_design value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_energy_watthour:
      type: gauge
      description: energy_watthour value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_info:
      type: gauge
      description: info of /sys/class/power_supply/<power_supply>.
      labels:
        capacity_level: {}
        instance: {}
        job: {}
        manufacturer: {}
        model_name: {}
        power_supply: {}
        serial_number: {}
        status: {}
        technology: {}
        type: {}
    node_power_supply_online:
      type: gauge
      description: online value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_power_watt:
      type: gauge
      description: power_watt value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_present:
      type: gauge
      description: present value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_voltage_min_design:
      type: gauge
      description: voltage_min_design value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_power_supply_voltage_volt:
      type: gauge
      description: voltage_volt value of /sys/class/power_supply/<power_supply>.
      labels:
        instance: {}
        job: {}
        power_supply: {}
    node_pressure_cpu_waiting_seconds_total:
      type: counter
      description: Total time in seconds that processes have waited for CPU time
      labels:
        instance: {}
        job: {}
    node_pressure_io_stalled_seconds_total:
      type: counter
      description: Total time in seconds no process could make progress due to IO congestion
      labels:
        instance: {}
        job: {}
    node_pressure_io_waiting_seconds_total:
      type: counter
      description: Total time in seconds that processes have waited due to IO congestion
      labels:
        instance: {}
        job: {}
    node_pressure_memory_stalled_seconds_total:
      type: counter
      description: Total time in seconds no process could make progress due to memory congestion
      labels:
        instance: {}
        job: {}
    node_pressure_memory_waiting_seconds_total:
      type: counter
      description: Total time in seconds that processes have waited for memory
      labels:
        instance: {}
        job: {}
    node_procs_blocked:
      type: gauge
      description: Number of processes blocked waiting for I/O to complete.
      labels:
        instance: {}
        job: {}
    node_procs_running:
      type: gauge
      description: Number of processes in runnable state.
      labels:
        instance: {}
        job: {}
    node_schedstat_running_seconds_total:
      type: counter
      description: Number of seconds CPU spent running a process.
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_schedstat_timeslices_total:
      type: counter
      description: Number of timeslices executed by CPU.
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_schedstat_waiting_seconds_total:
      type: counter
      description: Number of seconds spent by processing waiting for this CPU.
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_scrape_collector_duration_seconds:
      type: gauge
      description: "node_exporter: Duration of a collector scrape."
      labels:
        collector: {}
        instance: {}
        job: {}
    node_scrape_collector_success:
      type: gauge
      description: "node_exporter: Whether a collector succeeded."
      labels:
        collector: {}
        instance: {}
        job: {}
    node_selinux_enabled:
      type: gauge
      description: SELinux is enabled, 1 is true, 0 is false
      labels:
        instance: {}
        job: {}
    node_sockstat_FRAG_inuse:
      type: gauge
      description: Number of FRAG sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_FRAG_memory:
      type: gauge
      description: Number of FRAG sockets in state memory.
      labels:
        instance: {}
        job: {}
    node_sockstat_FRAG6_inuse:
      type: gauge
      description: Number of FRAG6 sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_FRAG6_memory:
      type: gauge
      description: Number of FRAG6 sockets in state memory.
      labels:
        instance: {}
        job: {}
    node_sockstat_RAW_inuse:
      type: gauge
      description: Number of RAW sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_RAW6_inuse:
      type: gauge
      description: Number of RAW6 sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_TCP_alloc:
      type: gauge
      description: Number of TCP sockets in state alloc.
      labels:
        instance: {}
        job: {}
    node_sockstat_TCP_inuse:
      type: gauge
      description: Number of TCP sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_TCP_mem:
      type: gauge
      description: Number of TCP sockets in state mem.
      labels:
        instance: {}
        job: {}
    node_sockstat_TCP_mem_bytes:
      type: gauge
      description: Number of TCP sockets in state mem_bytes.
      labels:
        instance: {}
        job: {}
    node_sockstat_TCP_orphan:
      type: gauge
      description: Number of TCP sockets in state orphan.
      labels:
        instance: {}
        job: {}
    node_sockstat_TCP_tw:
      type: gauge
      description: Number of TCP sockets in state tw.
      labels:
        instance: {}
        job: {}
    node_sockstat_TCP6_inuse:
      type: gauge
      description: Number of TCP6 sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_UDP_inuse:
      type: gauge
      description: Number of UDP sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_UDP_mem:
      type: gauge
      description: Number of UDP sockets in state mem.
      labels:
        instance: {}
        job: {}
    node_sockstat_UDP_mem_bytes:
      type: gauge
      description: Number of UDP sockets in state mem_bytes.
      labels:
        instance: {}
        job: {}
    node_sockstat_UDP6_inuse:
      type: gauge
      description: Number of UDP6 sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_UDPLITE_inuse:
      type: gauge
      description: Number of UDPLITE sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_UDPLITE6_inuse:
      type: gauge
      description: Number of UDPLITE6 sockets in state inuse.
      labels:
        instance: {}
        job: {}
    node_sockstat_sockets_used:
      type: gauge
      description: Number of IPv4 sockets in use.
      labels:
        instance: {}
        job: {}
    node_softnet_backlog_len:
      type: gauge
      description: Softnet backlog status
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_softnet_cpu_collision_total:
      type: counter
      description: Number of collision occur while obtaining device lock while transmitting
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_softnet_dropped_total:
      type: counter
      description: Number of dropped packets
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_softnet_flow_limit_count_total:
      type: counter
      description: Number of times flow limit has been reached
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_softnet_processed_total:
      type: counter
      description: Number of processed packets
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_softnet_received_rps_total:
      type: counter
      description: Number of times cpu woken up received_rps
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_softnet_times_squeezed_total:
      type: counter
      description: Number of times processing packets ran out of quota
      labels:
        cpu: {}
        instance: {}
        job: {}
    node_textfile_scrape_error:
      type: gauge
      description: 1 if there was an error opening or reading a file, 0 otherwise
      labels:
        instance: {}
        job: {}
    node_time_clocksource_available_info:
      type: gauge
      description: Available clocksources read from '/sys/devices/system/clocksource'.
      labels:
        clocksource: {}
        device: {}
        instance: {}
        job: {}
    node_time_clocksource_current_info:
      type: gauge
      description: Current clocksource read from '/sys/devices/system/clocksource'.
      labels:
        clocksource: {}
        device: {}
        instance: {}
        job: {}
    node_time_seconds:
      type: gauge
      description: System time in seconds since epoch (1970).
      labels:
        instance: {}
        job: {}
    node_time_zone_offset_seconds:
      type: gauge
      description: System time zone offset in seconds.
      labels:
        instance: {}
        job: {}
        time_zone: {}
    node_timex_estimated_error_seconds:
      type: gauge
      description: Estimated error in seconds.
      labels:
        instance: {}
        job: {}
    node_timex_frequency_adjustment_ratio:
      type: gauge
      description: Local clock frequency adjustment.
      labels:
        instance: {}
        job: {}
    node_timex_loop_time_constant:
      type: gauge
      description: Phase-locked loop time constant.
      labels:
        instance: {}
        job: {}
    node_timex_maxerror_seconds:
      type: gauge
      description: Maximum error in seconds.
      labels:
        instance: {}
        job: {}
    node_timex_offset_seconds:
      type: gauge
      description: Time offset in between local system and reference clock.
      labels:
        instance: {}
        job: {}
    node_timex_pps_calibration_total:
      type: counter
      description: Pulse per second count of calibration intervals.
      labels:
        instance: {}
        job: {}
    node_timex_pps_error_total:
      type: counter
      description: Pulse per second count of calibration errors.
      labels:
        instance: {}
        job: {}
    node_timex_pps_frequency_hertz:
      type: gauge
      description: Pulse per second frequency.
      labels:
        instance: {}
        job: {}
    node_timex_pps_jitter_seconds:
      type: gauge
      description: Pulse per second jitter.
      labels:
        instance: {}
        job: {}
    node_timex_pps_jitter_total:
      type: counter
      description: Pulse per second count of jitter limit exceeded events.
      labels:
        instance: {}
        job: {}
    node_timex_pps_shift_seconds:
      type: gauge
      description: Pulse per second interval duration.
      labels:
        instance: {}
        job: {}
    node_timex_pps_stability_exceeded_total:
      type: counter
      description: Pulse per second count of stability limit exceeded events.
      labels:
        instance: {}
        job: {}
    node_timex_pps_stability_hertz:
      type: gauge
      description: Pulse per second stability, average of recent frequency changes.
      labels:
        instance: {}
        job: {}
    node_timex_status:
      type: gauge
      description: Value of the status array bits.
      labels:
        instance: {}
        job: {}
    node_timex_sync_status:
      type: gauge
      description: Is clock synchronized to a reliable server (1 = yes, 0 = no).
      labels:
        instance: {}
        job: {}
    node_timex_tai_offset_seconds:
      type: gauge
      description: International Atomic Time (TAI) offset.
      labels:
        instance: {}
        job: {}
    node_timex_tick_seconds:
      type: gauge
      description: Seconds between clock ticks.
      labels:
        instance: {}
        job: {}
    node_udp_queues:
      type: gauge
      description: Number of allocated memory in the kernel for UDP datagrams in bytes.
      labels:
        instance: {}
        ip: {}
        job: {}
        queue: {}
    node_uname_info:
      type: gauge
      description: Labeled system information as provided by the uname system call.
      labels:
        domainname: {}
        instance: {}
        job: {}
        machine: {}
        nodename: {}
        release: {}
        sysname: {}
        version: {}
    node_watchdog_bootstatus:
      type: gauge
      description: Value of /sys/class/watchdog/<watchdog>/bootstatus
      labels:
        instance: {}
        job: {}
        name: {}
    node_watchdog_fw_version:
      type: gauge
      description: Value of /sys/class/watchdog/<watchdog>/fw_version
      labels:
        instance: {}
        job: {}
        name: {}
    node_watchdog_info:
      type: gauge
      description: Info of /sys/class/watchdog/<watchdog>
      labels:
        identity: {}
        instance: {}
        job: {}
        name: {}
        options: {}
        state: {}
        status: {}
    node_watchdog_nowayout:
      type: gauge
      description: Value of /sys/class/watchdog/<watchdog>/nowayout
      labels:
        instance: {}
        job: {}
        name: {}
    node_watchdog_timeleft_seconds:
      type: gauge
      description: Value of /sys/class/watchdog/<watchdog>/timeleft
      labels:
        instance: {}
        job: {}
        name: {}
    node_watchdog_timeout_seconds:
      type: gauge
      description: Value of /sys/class/watchdog/<watchdog>/timeout
      labels:
        instance: {}
        job: {}
        name: {}
    otel_scope_info:
      type: gauge
      description: Instrumentation Scope metadata
      labels:
        instance: {}
        job: {}
        otel_scope_name: {}
    process_cpu_seconds_total:
      type: counter
      description: Total user and system CPU time spent in seconds.
      labels:
        instance: {}
        job: {}
    process_max_fds:
      type: gauge
      description: Maximum number of open file descriptors.
      labels:
        instance: {}
        job: {}
    process_network_receive_bytes_total:
      type: counter
      description: Number of bytes received by the process over the network.
      labels:
        instance: {}
        job: {}
    process_network_transmit_bytes_total:
      type: counter
      description: Number of bytes sent by the process over the network.
      labels:
        instance: {}
        job: {}
    process_open_fds:
      type: gauge
      description: Number of open file descriptors.
      labels:
        instance: {}
        job: {}
    process_resident_memory_bytes:
      type: gauge
      description: Resident memory size in bytes.
      labels:
        instance: {}
        job: {}
    process_start_time_seconds:
      type: gauge
      description: Start time of the process since unix epoch in seconds.
      labels:
        instance: {}
        job: {}
    process_virtual_memory_bytes:
      type: gauge
      description: Virtual memory size in bytes.
      labels:
        instance: {}
        job: {}
    process_virtual_memory_max_bytes:
      type: gauge
      description: Maximum amount of virtual memory available in bytes.
      labels:
        instance: {}
        job: {}
    prometheus_api_remote_read_queries:
      type: gauge
      description: The current number of remote read queries being executed or waiting.
      labels:
        instance: {}
        job: {}
    prometheus_build_info:
      type: gauge
      description: A metric with a constant '1' value labeled by version, revision, branch, goversion from which prometheus was built, and the goos and goarch for the build.
      labels:
        branch: {}
        goarch: {}
        goos: {}
        goversion: {}
        instance: {}
        job: {}
        revision: {}
        tags: {}
        version: {}
    prometheus_config_last_reload_success_timestamp_seconds:
      type: gauge
      description: Timestamp of the last successful configuration reload.
      labels:
        instance: {}
        job: {}
    prometheus_config_last_reload_successful:
      type: gauge
      description: Whether the last configuration reload attempt was successful.
      labels:
        instance: {}
        job: {}
    prometheus_engine_queries:
      type: gauge
      description: The current number of queries being executed or waiting.
      labels:
        instance: {}
        job: {}
    prometheus_engine_queries_concurrent_max:
      type: gauge
      description: The max number of concurrent queries.
      labels:
        instance: {}
        job: {}
    prometheus_engine_query_log_enabled:
      type: gauge
      description: State of the query log.
      labels:
        instance: {}
        job: {}
    prometheus_engine_query_log_failures_total:
      type: counter
      description: The number of query log failures.
      labels:
        instance: {}
        job: {}
    prometheus_engine_query_samples_total:
      type: counter
      description: The total number of samples loaded by all queries.
      labels:
        instance: {}
        job: {}
    prometheus_http_request_duration_seconds:
      type: histogram
      description: Histogram of latencies for HTTP requests.
      labels:
        handler: {}
        instance: {}
        job: {}
    prometheus_http_requests_total:
      type: counter
      description: Counter of HTTP requests.
      labels:
        code: {}
        handler: {}
        instance: {}
        job: {}
    prometheus_http_response_size_bytes:
      type: histogram
      description: Histogram of response size for HTTP requests.
      labels:
        handler: {}
        instance: {}
        job: {}
    prometheus_notifications_alertmanagers_discovered:
      type: gauge
      description: The number of alertmanagers discovered and active.
      labels:
        instance: {}
        job: {}
    prometheus_notifications_dropped_total:
      type: counter
      description: Total number of alerts dropped due to errors when sending to Alertmanager.
      labels:
        instance: {}
        job: {}
    prometheus_notifications_queue_capacity:
      type: gauge
      description: The capacity of the alert notifications queue.
      labels:
        instance: {}
        job: {}
    prometheus_notifications_queue_length:
      type: gauge
      description: The number of alert notifications in the queue.
      labels:
        instance: {}
        job: {}
    prometheus_ready:
      type: gauge
      description: Whether Prometheus startup was fully completed and the server is ready for normal operation.
      labels:
        instance: {}
        job: {}
    prometheus_remote_storage_exemplars_in_total:
      type: counter
      description: Exemplars in to remote storage, compare to exemplars out for queue managers.
      labels:
        instance: {}
        job: {}
    prometheus_remote_storage_highest_timestamp_in_seconds:
      type: gauge
      description: Highest timestamp that has come into the remote storage via the Appender interface, in seconds since epoch. Initialized to 0 when no data has been received yet.
      labels:
        instance: {}
        job: {}
    prometheus_remote_storage_histograms_in_total:
      type: counter
      description: HistogramSamples in to remote storage, compare to histograms out for queue managers.
      labels:
        instance: {}
        job: {}
    prometheus_remote_storage_samples_in_total:
      type: counter
      description: Samples in to remote storage, compare to samples out for queue managers.
      labels:
        instance: {}
        job: {}
    prometheus_remote_storage_string_interner_zero_reference_releases_total:
      type: counter
      description: The number of times release has been called for strings that are not interned.
      labels:
        instance: {}
        job: {}
    prometheus_sd_azure_cache_hit_total:
      type: counter
      description: Number of cache hit during refresh.
      labels:
        instance: {}
        job: {}
    prometheus_sd_azure_failures_total:
      type: counter
      description: Number of Azure service discovery refresh failures.
      labels:
        instance: {}
        job: {}
    prometheus_sd_consul_rpc_failures_total:
      type: counter
      description: The number of Consul RPC call failures.
      labels:
        instance: {}
        job: {}
    prometheus_sd_discovered_targets:
      type: gauge
      description: Current number of discovered targets.
      labels:
        config: {}
        instance: {}
        job: {}
        name: {}
    prometheus_sd_dns_lookup_failures_total:
      type: counter
      description: The number of DNS-SD lookup failures.
      labels:
        instance: {}
        job: {}
    prometheus_sd_dns_lookups_total:
      type: counter
      description: The number of DNS-SD lookups.
      labels:
        instance: {}
        job: {}
    prometheus_sd_failed_configs:
      type: gauge
      description: Current number of service discovery configurations that failed to load.
      labels:
        instance: {}
        job: {}
        name: {}
    prometheus_sd_file_read_errors_total:
      type: counter
      description: The number of File-SD read errors.
      labels:
        instance: {}
        job: {}
    prometheus_sd_file_watcher_errors_total:
      type: counter
      description: The number of File-SD errors caused by filesystem watch failures.
      labels:
        instance: {}
        job: {}
    prometheus_sd_http_failures_total:
      type: counter
      description: Number of HTTP service discovery refresh failures.
      labels:
        instance: {}
        job: {}
    prometheus_sd_kubernetes_events_total:
      type: counter
      description: The number of Kubernetes events handled.
      labels:
        event: {}
        instance: {}
        job: {}
        role: {}
    prometheus_sd_kubernetes_failures_total:
      type: counter
      description: The number of failed WATCH/LIST requests.
      labels:
        instance: {}
        job: {}
    prometheus_sd_kuma_fetch_failures_total:
      type: counter
      description: The number of Kuma MADS fetch call failures.
      labels:
        instance: {}
        job: {}
    prometheus_sd_kuma_fetch_skipped_updates_total:
      type: counter
      description: The number of Kuma MADS fetch calls that result in no updates to the targets.
      labels:
        instance: {}
        job: {}
    prometheus_sd_linode_failures_total:
      type: counter
      description: Number of Linode service discovery refresh failures.
      labels:
        instance: {}
        job: {}
    prometheus_sd_nomad_failures_total:
      type: counter
      description: Number of nomad service discovery refresh failures.
      labels:
        instance: {}
        job: {}
    prometheus_sd_received_updates_total:
      type: counter
      description: Total number of update events received from the SD providers.
      labels:
        instance: {}
        job: {}
        name: {}
    prometheus_sd_updates_delayed_total:
      type: counter
      description: Total number of update events that couldn't be sent immediately.
      labels:
        instance: {}
        job: {}
        name: {}
    prometheus_sd_updates_total:
      type: counter
      description: Total number of update events sent to the SD consumers.
      labels:
        instance: {}
        job: {}
        name: {}
    prometheus_target_metadata_cache_bytes:
      type: gauge
      description: The number of bytes that are currently used for storing metric metadata in the cache
      labels:
        instance: {}
        job: {}
        scrape_job: {}
    prometheus_target_metadata_cache_entries:
      type: gauge
      description: Total number of metric metadata entries in the cache
      labels:
        instance: {}
        job: {}
        scrape_job: {}
    prometheus_target_scrape_pool_exceeded_label_limits_total:
      type: counter
      description: Total number of times scrape pools hit the label limits, during sync or config reload.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrape_pool_exceeded_target_limit_total:
      type: counter
      description: Total number of times scrape pools hit the target limit, during sync or config reload.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrape_pool_reloads_failed_total:
      type: counter
      description: Total number of failed scrape pool reloads.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrape_pool_reloads_total:
      type: counter
      description: Total number of scrape pool reloads.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrape_pool_symboltable_items:
      type: gauge
      description: Current number of symbols in table for this scrape pool.
      labels:
        instance: {}
        job: {}
        scrape_job: {}
    prometheus_target_scrape_pool_sync_total:
      type: counter
      description: Total number of syncs that were executed on a scrape pool.
      labels:
        instance: {}
        job: {}
        scrape_job: {}
    prometheus_target_scrape_pool_target_limit:
      type: gauge
      description: Maximum number of targets allowed in this scrape pool.
      labels:
        instance: {}
        job: {}
        scrape_job: {}
    prometheus_target_scrape_pool_targets:
      type: gauge
      description: Current number of targets in this scrape pool.
      labels:
        instance: {}
        job: {}
        scrape_job: {}
    prometheus_target_scrape_pools_failed_total:
      type: counter
      description: Total number of scrape pool creations that failed.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrape_pools_total:
      type: counter
      description: Total number of scrape pool creation attempts.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrapes_cache_flush_forced_total:
      type: counter
      description: How many times a scrape cache was flushed due to getting big while scrapes are failing.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrapes_exceeded_body_size_limit_total:
      type: counter
      description: Total number of scrapes that hit the body size limit
      labels:
        instance: {}
        job: {}
    prometheus_target_scrapes_exceeded_native_histogram_bucket_limit_total:
      type: counter
      description: Total number of scrapes that hit the native histogram bucket limit and were rejected.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrapes_exceeded_sample_limit_total:
      type: counter
      description: Total number of scrapes that hit the sample limit and were rejected.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrapes_exemplar_out_of_order_total:
      type: counter
      description: Total number of exemplar rejected due to not being out of the expected order.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrapes_sample_duplicate_timestamp_total:
      type: counter
      description: Total number of samples rejected due to duplicate timestamps but different values.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrapes_sample_out_of_bounds_total:
      type: counter
      description: Total number of samples rejected due to timestamp falling outside of the time bounds.
      labels:
        instance: {}
        job: {}
    prometheus_target_scrapes_sample_out_of_order_total:
      type: counter
      description: Total number of samples rejected due to not being out of the expected order.
      labels:
        instance: {}
        job: {}
    prometheus_target_sync_failed_total:
      type: counter
      description: Total number of target sync failures.
      labels:
        instance: {}
        job: {}
        scrape_job: {}
    prometheus_template_text_expansion_failures_total:
      type: counter
      description: The total number of template text expansion failures.
      labels:
        instance: {}
        job: {}
    prometheus_template_text_expansions_total:
      type: counter
      description: The total number of template text expansions.
      labels:
        instance: {}
        job: {}
    prometheus_treecache_watcher_goroutines:
      type: gauge
      description: The current number of watcher goroutines.
      labels:
        instance: {}
        job: {}
    prometheus_treecache_zookeeper_failures_total:
      type: counter
      description: The total number of ZooKeeper failures.
      labels:
        instance: {}
        job: {}
    prometheus_web_federation_errors_total:
      type: counter
      description: Total number of errors that occurred while sending federation responses.
      labels:
        instance: {}
        job: {}
    prometheus_web_federation_warnings_total:
      type: counter
      description: Total number of warnings that occurred while sending federation responses.
      labels:
        instance: {}
        job: {}
    promhttp_metric_handler_errors_total:
      type: counter
      description: Total number of internal errors encountered by the promhttp metric handler.
      labels:
        cause: {}
        instance: {}
        job: {}
    promhttp_metric_handler_requests_in_flight:
      type: gauge
      description: Current number of scrapes being served.
      labels:
        instance: {}
        job: {}
    promhttp_metric_handler_requests_total:
      type: counter
      description: Total number of scrapes by HTTP status code.
      labels:
        code: {}
        instance: {}
        job: {}
    target_info:
      type: gauge
      description: Target metadata
      labels:
        instance: {}
        job: {}
        service_name: {}
        service_version: {}
        telemetry_sdk_language: {}
        telemetry_sdk_name: {}
        telemetry_sdk_version: {}
  native_operations:
    queries: {}
runtime:
  flat: true
  unix_time_unit: s
  format:
    timestamp: rfc3339
    value: float64
    nan: NaN
    inf: +Inf
    negative_inf: -Inf
